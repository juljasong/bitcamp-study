1. scoop 설치
	- 윈도우 패키지 관리자
	- scoop install git (깃 설치)

2. GraalVM 설치	- OpenJava 함께 설치
	- 유니버셜 가상 머신 : JVM, NodeJS 포함
	- graalvm.org 사이트에서 java 11버전 다운로드
	- c:\bitcamp\에 압축 풀기
	- graalvm의 bin 폴더를 실행 경로(path)에 추가
	   - 왜 ? path에 추가하면 아무 디렉토리에서나 해당 폴더의 프로그램을 실행할 수 있다.
	   - "시스템 환경 변수 편집" -> 해당프로그램실행 -> "고급" -> "환경변수" -> "시스템 변수" 목록 Path에 graalVM의 bin 폴더 추가
	- graalVM이 설치된 폴더는 JAVA_HOME 이름으로 환경변수에 등록
	   - 자바 프로그램 중에서는 JDK(JRE)를 찾을 때 JAVA_HOME으로 등록된 경로를 찾기 때문
	   - JDK(자바 개발 도구)를 설치한 후에는 반드시 이 환경 변수에 설치 디렉토리의 경로를 등록해야 한다
	   - "시스템 환경 변수 편집" -> 해당프로그램실행 -> "고급" -> "환경변수" -> "시스템 변수" -> "새로만들기" -> JAVA_HOME 이라는 이름으로 graalVM 설치 디렉토리 지정

3.Visual Studio Code(VS Code)
	- 일반 및 개발용 편집기
	- JavaScript로 만들어짐
	- 크롬 웹 브라우저 기반으로 실행
	- 소스코드(.java .html .css .js) 편집
	- 일반 텍스트(.txt .md 등)를 편집할 때도 사용

4. Eclipse 통합 개발환경(IDE) 설치
	- www.eclipse.org 설치 도우미 프로그램 다운로드
	- 이클립스의 작업 폴더(workspace 디렉토리) 설정
	- 이클립스의 개발 환경 설정
	   - eclipse-inst-win64.exe 실행
	   - update 마크(느낌표)가 있으면 일단 해당 도구를 먼저 갱신
	   - 갱신이 완료되면 이 프로그램을 재시작
	   - eclipse-enterprise(EE) 버전 설치 후 실행
	   - 워크스페이스(작업폴더) 지정 : C:\user\사용자아이디\eclipse-workspace
	- eclipse 사용 환경 설정(Preferences)
	   - JDK 경로 확인 및 지정
	      - window 메뉴 - preferences - java -> installed JREs (GraalVM 들어와 있는지 확인)
	   - Java 소스 코드 저장할 때 사용할 인코딩 규칙 설정
	      - General - workspace -> Text file encoding -> UTF-8
	   - 기본 편집기의 실행 환경 설정
	      - General - Editors - Text Editors -> Displayed tab width : 2
	      - insert spaces for tabs 체크
	      - show print margin 체크, column = 100
	      - show white space characters - configure visibility -> carriage return, line feed 체크 해제 + transparency level 30(공백 표시 시 30% 투명도)
	- 웹 관련 파일 저장시, 사용할 인코딩 규칙 설정
	   - Web - CSS/HTML/JSP Files - encoding : UTF-8
	- 폰트 및 크기 설정
	   - Colors and Fonts - Basic - Text Font

5. Git 준비
- 개발 PC에 github.com의 저장소 복제
- % or $ : Command Line
- C:\Users\user\git\bitcamp-study>	$ git clone [깃허브_저장소_주소] ([임의이름]) : 저장소 복제
				$ git config --global user.email "juljasong@gmail.com"
  				$ git config --global user.name "juljasong"
				---
				// $ git add [File_Name]  : 로컬 저장소에 백업 대상 목록 작성(스테이징)
				$ git add .  : 현재 상태 COMMIT

				$ git commit - m "저장 이유" 
  		   		$ git push : 로컬 저장소의 내용을 git 서버에 업로드
				$ git pull : 서버 변경 사항 가져오기

	+ powershell
	  $ Remove-Item [.\bitcamp-study\] -Recurse -force (강제 삭제)
	  $ mkdir git (디렉토리 생성)
	  $ dir/ls (디렉토리 살펴보기)
	  $ cd [directory] (디렉토리 이동)
	  $ java [File] (자바파일 실행)
	  $ ls -Force (숨은 파일 보기)
 	  $ pwd (위치)

	  $ javac *.java : 컴파일
	  $ javac (-d [저장소path]) path/*.java
	  $ java * : 실행
	  $ java (-classpath(-cp) [path]) package.*

https://github.com/kamranahmedse/developer-roadmap [개발자 로드맵]