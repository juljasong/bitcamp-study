package com.eomcs.lms;

import java.sql.Date;
import java.util.Scanner;
// 1. 배열의 개수를 변수에 저장하여 크기 변경 쉽게 하기
// 2. 코드를 관리하기 쉽도록 작은 기능 단위로 분리 : 메소드
// 3. 메소드 사이에서 공유하는 변수 : 클래스 변수 - 스태틱 변수
// 4. 메소드 내에서 사용하는 변수 : 지역(로컬) 변수
// 5. 복합 데이터를 저장할 메모리를 설계 : 클래스

public class App3 {

  final static int size = 5734;
  static Board[] boards = new Board[size];
  static int i = 0;
  static int j = 0;
  //static int[] no = new int[size];
  //static String[] title = new String[size];
  //static Date date[] = new Date[size];
  static Scanner sc = new Scanner(System.in);
  static int count = 0;
  //int[] viewCount = new int[count];

  public static void main(String[] args) {

    System.out.print("게시글 몇 개? ");
    count = sc.nextInt();
    sc.nextLine();
    inputBoards();
    sc.close();
    // 출력
    printBoards();
  }
  static void printBoards() {
    for (j = 0 ; j < i ; j++) {
      Board b = boards[j];
      System.out.printf("%d, %s, %s \n", b.no, b.title, b.date);
    }
  }
  static void inputBoards() {
    for (i = 0 ; i < count ; i++) {
      Board b = new Board();
      System.out.println("번호 : " + (i + 1));
      b.no = i;
      System.out.print("내용? ");
      b.title = sc.nextLine();
      b.date = new Date(System.currentTimeMillis());
      boards[i] = b;

      if (i < count-1) {
        System.out.print("계속하시겠습니까?(Y/N) ");
        String response = sc.nextLine();
        if (!response.equalsIgnoreCase("Y")) {
          break; // y 아니면 멈춤
        } else {
          System.out.println("-------");
          continue;
        }
      }
    }
  }
}

